/**
 * Monokai foculor 2 Light
 * 
 * A color scheme for Sublime Text 3 (> 3149)
 *     based on Monokai foculor, which itself was
 *     based on Monokai Spacegrey, which itself was
 *     based on Monokai Soda, which itself was
 *     based on Monokai
 *
 * It has some special settings for these languages:
 *     - JSON
 *     - XML + HTML
 *     - Yaml
 *     - JavaScript (ES6)
 *     - TypeScript
 *     - CSS + SCSS
 *     - Vue Component
 *     - PHP
 *     - Java
 *     - Python
 *     - C
 *     - Objective C
 *     - Bash
 *     - RegEx
 *
 * @author bluefirex <https://bluefirex.com>
 */
{
	"globals": {
		"background": "var(background)",
		"foreground": "var(text)",

		"line_highlight": "#0000000C",
		"find_highlight": "#ffe792",
		
		"selection": "#31323318",
		"selection_border": "#3132332A",
		"inactive_selection": "#31323330",

		"caret": "#8BA7A7",

		"gutter_foreground": "#5C627383",
		"guide": "#73797b30",
		"active_guide": "#73797b60",
		"shadow": "#00000020",
		"shadow_width": "12"
	},

	"variables": {
		"background": "#F5F6FA",
		"text": "#313233",

		"pink": "#E21759",
		"pink-dim": "#E2175922",
		"grey": "#9FA4B3",
		"dark-grey": "#292c34cc",
		"blue": "#4CA7DD",
		"orange": "#E3871C",
		"green": "#88B42C",
		"purple": "#9D74E6",
		"yellow": "#F49B0F",
		"yellow-dim": "#F49B0F20",
		"white": "#f8f8f8"
	},

	"rules": [
		// Generic
		{
			"scope": "comment",
			"foreground": "var(grey)"
		},
		
		{
			"scope": "keyword",
			"foreground": "var(pink)"
		},

		{
			"scope": "string.quoted",
			"foreground": "var(yellow)"
		},

		{
			"scope": "string.unquoted",
			"foreground": "var(yellow)"
		},

			{
				"scope": "string.unquoted.label, meta.object-literal.key.ts",
				"foreground": "var(text)"
			},

		{
			"scope": "string.interpolated",
			"foreground": "var(yellow)"
		},

		{
			"scope": "constant",
			"foreground": "var(purple)"
		},

		{
			"scope": "storage",
			"foreground": "var(pink)"
		},

		{
			"scope": "storage.type, support.type, entity.name.type, support.class",
			"foreground": "var(blue)"
		},

		{
			"scope": "storage.type.class, storage.type.interface, storage.type.trait",
			"foreground": "var(pink)"
		},

		{
			"scope": "entity.name.function",
			"foreground": "var(green)"
		},

		{
			"scope": "entity.name.constant",
			"foreground": "var(purple)"
		},

		{
			"scope": "meta.function-call",
			"foreground": "var(green)"
		},

		{
			"scope": "meta.function-call.object, meta.function-call.static, meta.function-call variable",
			"foreground": "var(text)"
		},

		{
			"scope": "variable.parameter",
			"foreground": "var(orange)"
		},

		{
			"scope": "variable.function",
			"foreground": "var(green)"
		},

		{
			"scope": "variable.other.class",
			"foreground": "var(blue)"
		},

		{
			"scope": "punctuation.definition.annotation, meta.annotation, variable.annotation",
			"foreground": "var(dark-grey)"
		},

		{
			"scope": "entity.name.class, entity.name.type.class",
			"foreground": "var(blue)"
		},

		{
			"scope": "entity.other.inherited-class",
			"foreground": "var(green)"
		},

		{
			"scope": "entity.name.namespace, entity.name.type.namespace, entity.name.namespace.header",
			"foreground": "var(dark-grey)"
		},

		{
			"scope": "support.other.namespace",
			"foreground": "var(dark-grey)"
		},

		/* {	// Different color for `this`
			"scope": "variable.language.this",
			"foreground": "var(dark-grey)"
		}, */

		// Library
		{
			"scope": "support.class.builtin",
			"foreground": "var(blue)"
		},

		{
			"scope": "support.function",
			"foreground": "var(blue)"
		},

		{
			"scope": "support.constant",
			"foreground": "var(purple)"
		},

			{
				"scope": "support.constant.core",
				"foreground": "var(blue)"
			},

		// Regex
		{
			"scope": "string.regexp",
			"foreground": "var(yellow)"
		},

			{
				"scope": "string.regexp constant.other.character-class.set",
				"foreground": "var(orange)"
			},

			{
				"scope": "string.regexp keyword.operator.quantifier",
				"foreground": "var(dark-grey)"
			},

			{
				"scope": "constant.other.character-class.escape.backslash.regexp",
				"foreground": "var(purple)"
			},

		// Punctuation
		{
			"scope": "punctuation",
			"foreground": "var(text)"
		},
			{
				"scope": "punctuation.definition.comment",
				"foreground": "var(grey)"
			},

			{
				"scope": "punctuation.definition.keyword",
				"foreground": "var(pink)"
			},

			{
				"scope": "punctuation.definition.constant",
				"foreground": "var(purple)"
			},

			{
				"scope": "punctuation.definition.string.begin, punctuation.definition.string.end",
				"foreground": "var(yellow)"
			},

		{
			"scope": "meta.group.braces.round.function.arguments",
			"foreground": "var(text)"
		},

		// XML / HTML / PLIST-specific
		{
			"scope": "entity.name.tag",
			"foreground": "var(pink)"
		},

		{
			"scope": "entity.other.attribute-name",
			"foreground": "var(green)"
		},

		{
			"scope": "meta.tag.sgml.doctype",
			"foreground": "var(dark-grey)"
		},

		{
			"scope": "meta.tag punctuation.separator.key-value.html",
			"foreground": "var(text)"
		},

		{
			"scope": "punctuation.definition.tag",
			"foreground": "var(pink)"
		},

		{
			"scope": "constant.character.entity.html, punctuation.definition.entity.html",
			"foreground": "var(purple)"
		},

		// JSON-specific
		{
			"scope": "string.quoted.double.json",
			"foreground": "var(dark-grey)"
		},

		{
			"scope": "punctuation.definition.string.begin.json, punctuation.definition.string.end.json",
			"foreground": "var(dark-grey)"
		},

		// PHP-specific
		{
			"scope": "meta.function.arguments support.class",
			"foreground": "var(blue)"
		},

		{
			"scope": "meta.tag.inline.phpdoc.php",
			"foreground": "var(dark-grey)"
		},

		{
			"scope": "meta.function-call.object.php",
			"foreground": "var(green)"
		},

		{
			"scope": "meta.function-call.php meta.group.php",
			"foreground": "var(text)"
		},

		{
			"scope": "variable.other.class.php",
			"foreground": "var(text)"
		},

		{
			"scope": "variable.other.global.php",
			"font_style": "italic"
		},

		{
			"scope": "meta.embedded.line.php source.php",
			"foreground": "var(text)"
		},

		{
			"scope": "punctuation.accessor.arrow.php, punctuation.accessor.double-colon.php",
			"foreground": "var(pink)"
		},

		{
			"scope": "variable.parameter.php",
			"foreground": "var(text)"
		},

		{
			"scope": "variable.language.php, variable.language.php punctuation.definition.variable",
			"foreground": "var(blue)"
		},

		{
			"scope": "meta.use.php support.class.php",
			"foreground": "var(text)"
		},

		// TypeScript-specific
		{
			"scope": "variable.other.constant.property",
			"foreground": "var(purple)"
		},

		// JavaScript-specific
		{
			"scope": "comment.block.documentation storage.type.class.jsdoc",
			"foreground": "var(pink)"
		},

		{
			"scope": "comment.block.documentation entity.name.type.instance.jsdoc",
			"foreground": "var(grey)"
		},

		{
			"scope": "keyword.operator.accessor",
			"foreground": "var(text)"
		},

		{
			"scope": "keyword.other.template.begin.js, keyword.other.template.end.js",
			"foreground": "var(yellow)"
		},

		{
			"scope": "punctuation.separator.key-value.js",
			"foreground": "var(pink)"
		},

		{
			"scope": "punctuation.definition.string.quoted",
			"foreground": "var(yellow)"
		},

		// CSS/SCSS-specific
		{
			"scope": "meta.property-name.scss, meta.property-name.css",
			"foreground": "var(blue)"
		},

		{
			"scope": "meta.at-rule.mixin.scss variable.scss",
			"foreground": "var(orange)"
		},

		{
			"scope": "meta.at-rule.mixin.scss support.constant",
			"foreground": "var(purple)"
		},

		{
			"scope": "meta.function-call.css",
			"foreground": "var(blue)"
		},

		{
			"scope": "entity.other.attribute-name.id.css punctuation, entity.other.attribute-name.class.css punctuation",
			"foreground": "var(green)"
		},

		{
			"scope": "support.function.interpolation.sass",
			"foreground": "var(yellow)"
		},

			{
				"scope": "support.function.interpolation.sass variable.other.value",
				"foreground": "var(orange)"
			},

		{
			"scope": "meta.property-value.scss, support.constant.property-value.scss, support.constant.property-value.css",
			"foreground": "var(blue)"
		},

		{
			"scope": "support.constant.property-value.css.sass",
			"foreground": "var(text)"
		},

		{
			"scope": "entity.other.attribute-selector.sass",
			"foreground": "var(orange)"
		},

		{
			"scope": "meta.property-value variable.scss",
			"foreground": "var(text)"
		},

		{
			"scope": "meta.property-name.scss invalid.illegal",
			"foreground": "var(pink)",
			"background": "var(pink-dim)"
		},

		{
			"scope": "comment.punctuation.comma.sass",
			"foreground": "var(text)"
		},

		// Vue-specific
		{
			"scope": "meta.directive.vue, source.directive.vue",
			"background": "var(yellow-dim)",
			"foreground": "var(yellow)",
			"font_style": "italic"
		},

		{
			"scope": "source.directive.vue string.unquoted.label.js",
			"foreground": "var(yellow)"
		},

		{
			"scope": "source.directive.vue keyword.operator.accessor",
			"foreground": "var(yellow)"
		},

		/*{	// Doesn't work at the moment due to not all equal signs being detected
			"scope": "text.html.vue meta.tag",
			"foreground": "var(pink)"
		},*/

		// Python-specific
		{
			"scope": "storage.type.function.python",
			"foreground": "var(pink)"
		},

		{
			"scope": "meta.generic-name.python",
			"foreground": "var(text)"
		},

		{
			"scope": "meta.function-call.python meta.qualified-name",
			"foreground": "var(green)"
		},

		{	// Example: urllib2.__Request__(url)
			"scope": "meta.function-call.python meta.qualified-name",
			"foreground": "var(green)"
		},

		{
			"scope": "entity.name.function.python meta.generic-name.python",
			"foreground": "var(green)"
		},

		// Bash-specific
		{
			"scope": "comment.line.number-sign",
			"font_style": "italic"
		},

		{
			"scope": "support.function.double-brace.begin.shell, support.function.double-brace.end.shell",
			"foreground": "var(pink)"
		},

		{
			"scope": "meta.function-call.arguments.shell",
			"foreground": "var(text)"
		},

		{
			"scope": "variable.parameter.option.shell",
			"font_style": "italic"
		},

		{
			"scope": "support.function.echo.shell",
			"foreground": "var(pink)"
		},

		// YAML-specific
		{
			"scope": "string.unquoted.plain.out.yaml, string.unquoted.block.yaml",
			"foreground": "var(dark-grey)"
		},

		{
			"scope": "keyword.control.flow.block-scalar.literal.yaml",
			"foreground": "var(yellow)"
		},

		{
			"scope": "keyword.control.property.anchor.yaml, punctuation.definition.anchor.yaml, keyword.control.flow.alias.yaml, punctuation.definition.alias.yaml",
			"foreground": "var(pink)"
		},

		{
			"scope": "entity.name.other.anchor.yaml",
			"foreground": "var(blue)"
		},

		{
			"scope": "variable.other.alias.yaml",
			"foreground": "var(green)"
		},

		// C-specific
		{
			"scope": "punctuation.section.group.begin.c, punctuation.section.group.end.c",
			"foreground": "var(text)"
		},

		{
			"scope": "meta.preprocessor.c",
			"font_style": "bold",
			"background": "#f9267210"
		},

		{
			"scope": "meta.group.c",
			"foreground": "var(text)"
		},

		// Objective C-specific
		{
			"scope": "punctuation.section.group.begin.objc, punctuation.section.group.end.objc",
			"foreground": "var(text)"
		},

		{
			"scope": "meta.function-call.objc",
			"foreground": "var(text)"
		},

		{
			"scope": "support.function.any-method.objc",
			"foreground": "var(green)"
		},

		{
			"scope": "meta.preprocessor.macro.objc, meta.preprocessor.import.objc",
			"font_style": "bold",
			"background": "#f9267210"
		},

		// Java-specific
		{
			"scope": "storage.type.java",
			"foreground": "var(pink)"
		},

		{
			"scope": "source.java-props",
			"foreground": "var(dark-grey)"
		},

		{
			"scope": "support.class.import.java",
			"foreground": "var(text)"
		},

		// Meta-stuff
		{
			"scope": "invalid.illegal",
			"foreground": "var(text)",
			"background": "var(pink)"
		},

		{
			"scope": "invalid.deprecated",
			"font_style": "italic"
		},

		// Linter
		{
			"scope": "sublimelinter.mark.error",
			"foreground": "#DA2000"
		},

		{
			"scope": "sublimelinter.gutter-mark",
			"foreground": "var(text)"
		},

		{
			"scope": "sublimelinter.mark.warning",
			"foreground": "#EDBA00"
		},
	]
}